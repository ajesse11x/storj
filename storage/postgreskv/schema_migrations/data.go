// Code generated by go-bindata. DO NOT EDIT.
// sources:
// .2018092201_initial-tables.up.sql.swp
// 2018092201_initial-tables.down.sql
// 2018092201_initial-tables.up.sql
package schema_migrations

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __2018092201_initialTablesUpSqlSwp = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x9c\x6b\x8c\x24\xd7\x55\xc7\x7f\xf3\xde\xe9\x67\x08\x26\x20\x10\xe4\x3a\x5e\xd1\xdd\xb8\xe7\xb5\x89\x5f\xbb\x3b\x1b\xcd\xce\xd6\xec\x76\x3c\xdb\x63\x7a\x7a\x76\xb5\x64\xc3\x50\xdd\x5d\x33\x53\x4c\x4f\x55\xbb\xaa\x7a\x1f\x26\x89\x8d\x78\x18\x89\x24\x12\x7c\x20\x20\x6f\x62\x22\x04\x22\x52\xa4\xc8\x96\x08\x09\x41\x4a\x02\x72\x12\x11\x12\x23\x04\x91\x82\x02\x04\xc5\x41\xca\xf2\x30\x5f\x30\x42\x21\x80\xea\xd9\xd5\x3d\xdd\xb3\xb3\xde\xd9\x5d\x5b\xbe\xff\x0f\x53\x3d\x75\xcf\xfd\x9f\x73\xef\x3d\x55\xf7\x9e\xfb\xa8\xda\xec\xb9\xd2\x59\xf1\xf0\xf4\x1c\xc0\x9b\x60\xfd\xf7\xff\xe4\xdd\x13\x2f\x7d\x05\xed\x93\xd0\x52\xdb\x4d\xf6\x81\xed\xa6\xa6\x19\xda\x74\x53\x35\xe6\xf6\x94\x7b\xbf\x4b\x38\x73\xd9\xb4\xb6\x67\x6c\xc7\xb4\x7e\xde\xfb\xab\x6e\x6a\x33\x2d\xd3\x76\x36\x2d\xcd\xde\xbe\x34\x63\xd7\xb7\xb4\x1d\x75\x7d\x47\xdf\xb4\x54\x47\x37\x0d\x7b\xe6\xc8\xec\xdc\xc3\xb3\x8f\x1c\x39\x32\x3b\xb7\xae\x1b\xba\xa3\xab\xcd\x29\x47\xad\x35\x35\x7b\xba\xdd\x9a\xb6\x1f\xdf\x97\x85\x12\x12\x6f\x70\xb4\x9d\x8d\xa9\x87\xd3\xbc\xfd\xc8\xdc\xac\xfb\xef\x7d\x6f\xbb\x57\xfc\xe0\x9b\xd7\xee\xb6\x55\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x77\x10\x4e\x6b\x9c\x27\x81\xe1\xe0\xff\x30\x82\x1f\xea\xb9\x4e\x04\xd7\x62\x70\x7d\xa8\x27\x7d\x2c\xb8\xde\x17\x5c\xe7\x7b\xd2\x47\x83\xeb\x8f\x04\xd7\x72\x4f\xfa\x48\x70\xbd\x37\xb8\xbe\xa7\x27\x7d\x3c\xb8\x4e\x06\xd7\x7f\xe8\x49\x97\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x18\x0c\xb5\x01\x2b\x87\x60\x66\xd2\x5f\xff\x0f\xe3\xff\xef\x66\xe1\x6f\xb2\xf0\xb9\x2c\x3c\x97\x85\xdf\xcd\xc2\xa5\x2c\xd8\x59\xb0\xb2\xf0\xb6\x2c\xbc\x98\x81\xdf\xcb\xc0\xbb\x33\xf0\x33\x19\xb8\x90\x81\x85\x0c\xcc\x66\xe0\xad\x19\x78\x25\x0d\xdf\x4e\xc3\x5f\xa7\xe1\xf9\x34\x3c\x9b\x86\x0f\xa6\xe1\x03\x69\xd0\xd3\xb0\x91\x06\x2d\x0d\x4b\x69\xf8\xe1\x34\xbc\x94\x82\xe7\x53\xf0\x91\x14\x5c\x4b\xc1\x33\x29\x78\x28\x05\x99\x14\x24\x53\xf0\xbf\x49\xf8\x5e\x12\x9e\x4b\x42\x23\x09\x6f\x49\xc2\x97\x13\x70\x29\x01\x87\x13\xf0\xe2\x24\xfc\xe2\x24\x1c\x99\xf4\xcb\xf3\xd9\x43\x7e\xd9\x66\x0f\xc1\x37\x27\xe0\xd9\x09\x38\x31\x01\x6f\x9d\x80\x89\x09\x38\x3d\x01\x3f\x36\x01\xdf\x18\x87\xcf\x8f\xc3\x13\xe3\x60\x8c\xc3\xc5\x71\x38\x3f\x0e\x33\xe3\x30\x3d\x0e\x53\xe3\xf0\x1f\x63\x70\x7d\x0c\x3e\x36\x06\x9b\x63\x70\x61\x0c\xde\x39\x06\x3f\x35\x06\x3f\x31\x06\x5f\x19\x85\x2f\x8e\xc2\x47\x47\xe1\x23\xa3\x70\x6d\x14\x8e\x8f\xc2\x37\x46\xe0\x33\x23\xf0\xa9\x11\xf8\xf8\x08\xfc\xc1\x08\xd4\x47\xe0\x87\x46\xe0\xcd\x23\xf0\xb9\x61\xf8\xd3\x61\xb8\x38\x0c\xff\x3d\x04\xaf\x0c\xc1\x27\x86\xe0\xe3\x43\x20\x96\x2a\x2b\x67\x45\x43\xb7\x1d\xdd\xa8\x4f\x4d\x31\x35\x25\x5c\xd4\xcd\x9d\x96\x69\x68\x86\xb3\xae\x1b\x75\x4b\xdb\xd1\x0c\x27\xaf\xe4\x2e\x5e\xbc\xb2\xa4\x2c\x2d\x2d\x2d\xe5\x8e\x1e\x3d\x79\xa1\xaa\x2c\x14\xc5\x91\x07\x1e\x28\x08\x31\x75\x42\x08\x3f\x39\x4a\xa2\x43\xe6\x22\x6f\x98\xce\x96\x6e\x6c\x8a\xba\x6a\x88\x9a\x26\x6a\x9a\x73\x59\xd3\x0c\x91\x9b\xd9\x30\xcd\x99\x9a\x6a\xd5\x4c\x73\x27\x27\x54\xa3\xd1\x7d\xeb\xe2\x95\xd9\xd9\x9c\xd0\x0d\x61\x98\xd6\x8e\xda\x14\x1e\xb7\x30\xad\x86\x66\xe9\xc6\x66\x61\x2f\x7b\xbb\xa9\x23\x8b\x55\xbb\xae\xeb\xf9\xdc\x4c\xae\x10\x18\xde\x23\x28\xde\xfb\x5e\xbf\x2c\xb3\xb3\xb9\x02\x7b\x57\x49\x94\x73\x66\x0f\xfe\x48\x68\xf6\xa6\xeb\x26\xa8\x90\xd9\x9c\x30\x9d\x2d\xcd\x12\xce\x96\x6a\x08\xbb\x5d\x6b\xa9\xce\x96\x2d\xda\x46\x43\xb3\x5c\xa9\x1b\x54\xc3\x5e\xb6\xf5\xda\xa4\x5c\x51\x77\x5a\x4d\xcd\x3e\x1a\xfc\xaf\x1a\x57\x45\xcb\x74\x34\xc3\xd1\xd5\xa6\xab\x7a\x4a\x6b\x7a\xbc\x76\x61\xda\x4d\xdf\x52\x6d\x4f\x26\x9e\x52\x14\x96\xe6\xb4\x2d\x43\x38\x5b\x9a\x30\xb4\x2b\x8e\x68\x99\xb6\xad\xd7\x9a\x9a\x70\x0d\x77\x4b\xe1\x88\xf5\xba\xd9\x6e\x36\xd6\xdd\xf2\xea\xbe\xa4\xb7\xe3\x46\xe4\xed\x6d\xbd\xd5\x72\x6b\xc3\xbc\xa4\x59\xae\x8a\xd3\xfa\x25\xcd\x10\xaa\x9f\x57\xb5\xc5\x8e\xbe\xb9\xe5\xb8\xf9\x36\xcc\xb6\xd1\x08\x73\xbb\xa9\x0d\xd5\x51\x7d\x9a\xa2\xb8\xac\xbb\xd2\xa2\xa1\x35\xf5\x1d\xcd\xd1\x2c\xa1\xb6\x5a\x9a\xd1\xd0\x1a\x42\xdf\xf0\x2d\x70\x73\x00\x87\x0f\x8b\xe5\x85\xf2\xe9\xb5\x85\xd3\x8a\xc8\xb5\x9a\xad\x4d\xfb\xf1\x66\x4e\x94\xce\x9e\x5d\xab\x2e\x9c\x5c\x56\xc4\x6a\xb5\x52\x5a\xac\x1e\x43\x29\x9f\x3a\x86\x5b\xc9\x15\xa5\xba\x56\x29\x0b\x5b\x73\xd6\x6b\x57\x1d\x2d\x5f\x2b\x0a\xb3\xee\x68\xce\x7a\x53\x33\x36\x9d\xad\x7c\xad\x20\xa6\xc4\x5c\x51\x6c\xee\x2d\x50\x10\xf7\x8b\xb9\x82\x4f\xa9\x94\x4f\x89\xd2\x92\xff\x3b\xa6\xa2\xbc\xb6\xbc\xec\xdf\x2c\x2d\x89\x9a\x98\x17\xb9\xb0\xb5\x44\xf5\x8c\x52\x8e\xb2\x2e\xaf\xac\x3c\xd6\xc9\x5c\x13\x47\xe7\xdd\xf6\xb0\x1d\xf7\x11\xc9\xd7\xfc\x47\x7c\x4e\x2c\xad\x54\xfa\xda\xe1\xe7\x3c\x7f\xa6\xb4\xac\x88\x9a\x38\x7e\x22\xa6\x65\xa1\x7c\xea\xc6\xc5\x98\x77\x5f\x02\x9e\x0d\x9c\x54\x4e\x97\xca\x2c\x56\x94\x85\xaa\x22\x96\xd6\xca\x8b\xd5\xd2\x4a\x59\xb8\xb9\xd5\x98\x47\xd6\xfc\xa7\xb8\x10\x14\x73\x35\x78\xa8\x17\x56\xc5\xe1\xc3\xb7\xd0\x20\xde\x53\xb1\x67\x7d\xc6\x2a\xc5\x73\xa6\x58\xc5\xe4\xd5\x0d\x47\xb3\x5a\xa6\x2d\xee\xf7\x7d\xc6\xfd\xe9\x16\xaf\x10\x35\x40\x74\xfb\x84\x98\xed\xd4\x7f\x74\xf7\xe8\xbc\xeb\xe6\xba\xa3\x9b\x46\x3e\xf2\x8d\x9c\xe8\x3c\x7c\x9d\x87\xde\xb1\xda\x46\x5d\x75\xb4\x75\x4f\xe9\xa0\xfb\xf9\x9c\xfb\xde\x98\xb9\x41\xb2\xfb\xf2\xa9\x3d\xd1\xef\x11\x2f\x8a\xf0\xd5\xec\x4b\xc6\x9e\xf4\x2e\xba\x5b\x52\x70\x3b\xac\xbb\xdb\x15\x12\xa3\xbb\x93\xba\x42\xba\xbb\xa1\xb3\x3f\xdd\x3b\xe2\x74\xfb\x61\xf3\xc8\xd4\x01\x6c\x8f\xc4\xd9\x7a\x24\x5f\x35\xe9\xc3\xbd\xa4\xb7\xcc\xf8\xc0\x81\x33\xde\x74\x35\x76\x68\x02\xc4\xd9\xe6\x6e\x92\x6d\x17\xd9\x40\xb6\x1b\x91\xed\x66\x1a\x44\x76\x83\x41\x85\xdf\x71\xab\x8e\x30\x2d\xe1\x71\x8b\x5c\xf8\xfa\xcd\x15\xdd\xfe\x59\x35\xae\x7a\xa3\x8b\xcd\x57\xd5\xf5\x87\x76\x0b\xdd\x09\xe8\xa3\x81\x88\xf7\xb6\xd6\xbd\x5b\xa6\xa8\x69\x10\x74\x11\x5e\x4f\x10\xf2\x74\xfa\x0d\x21\x84\x66\xd4\xcd\x86\x96\xdf\xd1\x1c\xd5\x4d\x2b\x8a\x9c\x66\xd7\xd5\x96\x96\x2b\xb8\x1d\x56\x78\xbb\x4f\x8e\x8d\x76\xb3\xe9\x32\xf6\xe4\x88\x6e\x7b\x59\x56\x95\x65\x65\xb1\x1a\x66\xa9\xb5\xeb\xdb\x9a\xd3\x93\x21\xb8\x19\xf6\xaa\xe7\x4a\xca\xf9\xc8\xd2\xf5\x96\xa5\x39\xce\x55\xb1\xb0\x0a\x41\x47\xf5\x58\xa5\x74\x76\xa1\x72\x41\x3c\xaa\x5c\x10\x11\x61\xa8\xb4\x40\x64\x68\x79\xa5\xea\x8d\x2f\x7c\x3b\xc2\x72\xf8\x5d\x71\x24\xb4\x78\x46\x59\x7c\x54\x44\x45\xf1\x07\x07\x85\xe2\x2e\x12\xef\x46\x24\xd5\xcd\x51\x51\x96\x94\x8a\x52\x5e\x54\xc2\xa2\xd8\xa1\x5d\x86\xba\xa3\x0d\x22\xf3\x25\x02\xaa\xa0\xe8\x7e\xf7\x1f\xb5\x76\x1e\x28\x95\x57\x95\x4a\x55\x94\xca\xd5\x95\x7e\xec\x45\xbf\xc1\x0b\xe2\xdc\xc2\xf2\x9a\xb2\x2a\xe2\x3e\x1c\x1b\x0b\x1f\x73\x7d\xad\xd1\xde\xd9\xb9\x2a\x2c\xf3\xb2\xb0\xb7\xdc\xa1\xa9\xb0\xdb\x1b\x1b\x7a\xdd\xf5\x35\x4b\x68\x97\x34\xeb\xaa\x37\x48\xf7\xfc\xb2\x6d\x38\x7a\x53\x78\x1b\xcc\x85\x5a\x77\xda\x6a\xb3\xe9\x0e\x81\x5b\x2d\xd3\x72\x6c\x51\xdf\x52\x8d\x4d\x77\x04\xeb\xba\x5d\xc7\xe3\xea\x5b\xaa\xa5\xd6\xdd\x5f\x2d\xcd\x0a\x9b\x55\x38\x5b\xba\xdd\xa1\x74\x73\x3c\xaa\x5d\x3d\xa7\x36\xdb\xda\xaa\x63\x5a\xee\xe0\xd8\xd1\xac\x0d\xb5\xae\x75\xf8\x5b\xaa\x6d\x87\xf4\x41\x3d\xd9\x5a\x4b\xb5\x54\x47\x6b\x5e\x2d\x0a\xd3\x8a\x9c\x21\xd6\x86\x9e\x1d\xde\xd0\xc5\x1d\xd4\xf9\xff\x1d\xf7\xc2\xb7\xfe\x0d\xe0\x4b\x94\xca\xd5\x28\x39\xe6\x59\xc5\x58\x1b\xb9\xf5\xdc\xaf\x9d\xa2\xe6\xf0\xe2\xff\x57\x0e\xc1\x6f\x05\xf1\x7f\xb8\xfe\xfe\xcf\x59\xf8\x4e\x16\x1e\xcf\xc2\x4a\x16\x8e\x67\x21\x9f\x85\xaf\x65\xa0\x96\x81\x7b\x33\xf0\x3f\x41\x6c\xff\x47\x69\xf8\x50\x1a\x7e\x29\x0d\xe7\xd2\x30\x92\x86\x6f\xa6\xe0\x83\x29\x98\x4f\xc1\x7f\x25\xe1\x4b\x49\xf8\xed\x24\x3c\x91\x84\x9f\x4d\xc2\x99\x24\xfc\x67\x02\xbe\x96\x80\x27\x13\x70\x2a\x01\xf7\x24\xe0\x3b\x93\xf0\xa5\x49\xdf\x9e\xb9\x49\xc8\x4f\xc2\x27\x0f\xc1\x33\x87\x60\xe1\x10\x7c\x79\x02\x2e\x4c\xc0\x3b\x26\x20\x31\x01\xff\x36\x0e\x5f\x1c\x87\xcf\x8e\xc3\x87\xc6\xe1\xd8\x38\xdc\x33\x0e\x2f\x8c\x41\x7b\x0c\x66\xc6\xe0\xff\x46\xe1\x6f\x47\xe1\x8f\x47\xe1\x99\x51\xf8\x95\x51\x38\x32\x0a\xc9\x51\x78\x6e\x04\xd4\x11\x98\x1b\x81\x89\x11\xf8\xee\x30\x7c\x7a\x18\x9e\x1e\x86\xf7\x0d\xc3\xfa\x30\x9c\x19\x86\xeb\x43\xf0\x85\x21\xf8\xd8\x10\x7c\x60\x08\xac\x57\xb3\xf1\xc0\x1b\x3d\x8b\x2e\xc4\x43\xfc\xbe\x29\x83\xc5\x1d\xf7\x0d\xb3\x71\xa3\x74\xfd\x8a\x68\x6d\x5c\x29\x8a\x1b\x12\x45\x82\x46\xab\xed\xd8\x42\x47\xf4\xc3\x72\xe9\x6c\xa9\x2a\xe6\x0a\xfd\x53\x77\xb1\xef\xad\xf4\x86\xd9\xf7\x6b\xdc\x2d\x67\xd8\x3f\xdd\xcd\x2a\xbe\x45\x43\x03\x0c\xaa\xf6\xdb\xd7\x8c\x83\x99\x6f\xb7\x01\x21\xe5\x5e\x8a\xf6\x36\x62\xff\x26\xde\x6c\x61\x0e\xa6\xf0\xb7\xb7\x0a\x0f\x98\xef\xee\x3b\xc2\x00\xca\x57\x51\xa1\x7b\x89\xed\x5f\xf7\xbe\x24\x6f\x7b\xed\x08\x21\x56\x2a\xa7\x94\x8a\x38\x79\x41\xb4\x1a\x77\x58\xdd\x74\x34\xa0\xbc\x13\x8a\x3b\xcc\x7d\xee\xed\xc3\x80\x03\x31\x71\x0f\xab\x6e\x57\x37\x7a\x5b\x95\xf4\x6d\xcd\x53\xca\xea\xe2\x20\x9b\xdc\xb1\x69\xab\x31\x1d\x8c\x6a\xe7\x85\x1e\xfc\xbc\x81\x7c\x27\x40\x71\x6d\x9e\x0e\x03\xc0\x86\x37\xc5\xdb\x37\xe3\xf9\x33\x4a\x45\x11\x79\x7d\xda\x52\x8d\x4d\x6d\xbd\x69\x5e\x16\xa5\x55\x6f\xf4\x2b\x56\x2a\x5d\x94\x27\x5c\x2b\x22\xa9\x41\xb5\xd9\x15\x40\x8a\x56\xa3\x4b\x2c\x88\xf2\xf2\xc1\xb5\x27\xae\x8e\x29\x2b\x0a\x7d\xda\x1b\x78\xbb\x3f\x3a\x93\xf9\xb6\xa3\x5a\x4e\xb7\xe6\xb5\x72\x69\xa5\x2c\x16\x82\xc1\x7a\x8f\x1d\xaf\xf9\x26\xcb\x7b\x25\x5a\x57\x1d\x6f\x4e\xbb\xb7\xc6\x8f\xcf\x8b\x30\x7d\xa0\xf3\x7a\x2c\x61\xbb\x6c\xe9\x9b\x5b\x83\x9a\xef\xb8\x88\x4b\x0d\xe0\x7b\x3d\x7b\x43\xef\x43\x9b\xef\xf2\x7e\x6f\x0a\x21\x1f\x09\xc7\xc2\xed\x58\xc1\x63\x81\xdc\xbc\xe8\xdb\x7a\x5e\x81\xc2\x88\xae\xd6\xaf\xd4\xb5\xe9\x18\x4b\x34\x6d\xd1\x5f\xd2\x8f\x2d\x17\x56\xfd\x20\xb3\xd8\x4f\xa8\x6b\xa5\xa1\xa1\x5b\x7e\x59\xee\x17\x73\x6e\xb6\x9e\xba\xe8\x4b\xb0\xb8\xb0\xaa\xb8\xc5\x2b\x8b\x20\xf7\xae\xe5\x13\xbf\x7d\x95\xe5\x55\x65\xd7\x0a\x45\xa4\x50\x29\x9f\x72\x15\x76\x1c\xa8\xd8\xaf\x29\x6f\x4a\x57\x28\xd2\x45\xdd\x34\x2f\x77\x98\x83\xc7\x37\x6a\xb8\xf3\xa5\xea\x19\x51\x51\x16\xd7\x2a\xab\xa5\x73\x0a\xe1\xaa\xc9\xaa\x52\x5d\x59\xf2\xbc\x6c\x5d\x35\x1a\xeb\x3b\x9a\xa3\x06\x6b\x28\xbd\x0b\x30\x4d\xdd\x76\xd6\x1b\xba\xa5\xd5\x1d\xd3\xba\xba\x6e\x69\x97\x34\xcb\x0e\xa7\x9b\x44\x30\x1f\x12\xda\x15\xfc\x1b\x3d\xa1\x7e\x21\xe6\xfd\xc9\x22\xe1\x4d\x66\xac\x3b\xa6\x28\x95\xab\xca\x69\xa5\x12\x24\x14\x7a\x96\x6d\xbc\x25\x9b\x55\x6f\x22\xe0\x98\x17\xff\xbf\x9c\x80\xed\xa4\x1f\xff\x87\xfb\xf3\xbf\x9e\x85\x4f\x67\xe1\x5a\x16\x7e\x35\x0b\x6f\xcf\x42\x2a\x0b\xcf\x07\xf1\xff\x91\x0c\x1c\xca\xc0\xf5\x34\x7c\x26\x0d\xbf\x96\x86\xf7\xa7\xa1\x9a\x86\xf9\x34\xfc\x63\x0a\x3e\x95\x82\x3f\x4c\xc1\x42\x0a\x5e\x49\xc2\x87\x93\xf0\x54\xd2\xd7\xb5\x9a\x3c\xa0\x0d\x0c\x12\x12\x12\x12\x12\x12\x12\x12\x12\x12\x77\x17\x5e\x9c\xe0\x07\xf2\xe1\x88\xbc\xb3\xe2\xd7\xf7\x7e\x14\xd7\x87\xd1\x65\x7c\xfd\xb9\x2b\xe8\x6c\x35\xa6\xa3\xe5\xe0\xde\x40\x36\x36\x4b\xed\x87\x8e\xf1\xd8\xb8\x2b\x34\xf6\xe8\xa7\xa6\x84\xdd\xae\xd5\x4d\xc3\xd1\x0c\xc7\x16\xe6\x86\xbf\x5e\xef\x07\xaa\x97\xb5\x9c\xa5\x89\xa6\x69\x6e\xeb\xc6\xa6\xd8\x30\xad\x42\x51\xd8\xa6\xb8\xac\x09\x47\xad\x6f\x0b\xdd\x11\xa6\x21\xb6\x34\x4b\x0b\xa9\x9c\x2d\xdd\x16\xa6\xa1\x79\x5b\x04\x74\x47\x68\x57\x74\xdb\xb1\x8b\xa2\xae\x1a\x39\x6f\x57\x40\x4b\xb5\x1c\x57\xc9\xae\x90\xd8\xb4\x5c\xf9\xcb\xde\xb2\x6e\x5d\x6d\xdb\x9a\x68\xdb\xc2\x31\x85\xbd\xad\xb7\xbc\x7d\x86\x42\x6d\x36\x3d\x35\x3d\xf3\x2a\x41\x21\x7b\xe7\x94\xbc\xd9\x81\xf8\x6a\xe9\xe0\x09\x34\xb1\xac\x2c\x55\xc5\xca\x5a\x55\xa9\x88\x77\xad\x94\xca\xf1\xda\x14\x2b\xe5\x3e\xdc\xf3\xf1\x4a\x8d\x87\x9b\xb1\x86\xe9\x6a\xbc\x5d\x0c\xbb\xb6\x19\xb8\x28\xf4\x8b\xfc\xf7\x53\xb2\x10\x77\x6e\x8a\xf0\x40\xa7\x9a\x0e\x78\x92\xa8\x67\x32\xa8\xdf\x8e\xdb\x5d\x95\x1a\x4d\xe4\xbc\x16\xe6\x8b\xc4\x9d\x9e\x3d\xf4\xe2\xff\xe9\x49\xf8\x7a\xb0\xfe\x1f\x9e\xdf\xff\x44\x16\x36\xb2\x70\x2c\x0b\x63\x41\xdc\xff\x3b\x19\xd8\x0e\xf6\xfb\x3f\x94\x81\x07\x33\xf0\x40\x06\xde\x92\x81\xe1\x0c\xbc\x9c\x86\x7f\x4d\xc3\xbf\xa4\xe1\xc9\x34\xbc\x27\x0d\xef\x4a\xc3\x83\xc1\x7e\x80\x56\x0a\x66\x52\x90\x48\xc1\xb7\x92\xf0\xe7\x49\xb8\x96\x84\xdf\x08\xf6\xf3\xff\x40\x12\xae\x27\xe0\x5a\x02\x96\x13\x30\x9e\xf0\xed\xaa\x4d\xfa\x7b\x14\x36\x82\xdf\xf7\x4d\xc2\x9b\x26\xe1\x7b\x87\xee\xf2\x9b\x5e\x42\x42\x42\x42\x42\x42\xe2\xb5\x89\x01\xc3\xcf\xbe\x38\xf8\xe5\xd2\x13\xf3\x77\x54\x57\x94\x7e\x17\x74\xbe\xf6\x96\x83\xe5\x6a\xb0\x5c\x0d\xee\x69\xca\xd7\xd7\x6a\xf0\x01\xaf\x02\x07\x1b\xcf\xfb\x9c\x27\xe8\x3e\x1e\x10\x9d\x67\xa8\x5e\x78\x4c\xd9\x6d\x76\xbe\xf7\x1c\xe0\x80\x33\x80\xb1\xda\x8f\x8e\x03\xc6\xe1\xb7\xa7\xa7\x36\x76\xac\x37\x3c\x9d\xd2\xc7\x51\x3c\x9e\x3d\x5e\xe8\x1e\x61\xe7\xe8\xa7\xff\x60\x76\x1f\x8b\xf4\x7d\xc5\x3b\x02\xea\xbb\xf6\xfd\x7b\x6f\xc2\xf2\x3c\x62\xd7\x19\x49\xff\xb8\x46\x5f\xd9\x98\x83\x79\xfc\xde\x01\x4c\xfa\x7a\xe0\xe6\xfe\x2c\x2d\x88\x79\x9f\x6b\x97\xb3\xf4\x9b\xdf\xa8\xc5\x3d\x24\x3a\x27\xe0\xfa\x41\xff\x23\x9d\x6e\xfc\x6f\x65\xfc\xf8\xde\x8d\xff\xc3\xef\xeb\xbd\x98\x85\x17\xb2\xf0\x4c\x16\x7e\x39\x0b\x3f\x99\x85\xef\x67\xe0\x9f\x32\xf0\x97\x81\xfc\x6a\x70\x06\xe0\xdf\xd3\x77\xb9\x8f\x97\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\x90\xe8\x41\x77\xd8\x3e\x78\x57\xb8\x17\xcf\xee\x6f\xab\x4a\xe7\xfc\x49\xb8\xe5\xe1\x36\xd1\x86\xb3\x6d\x07\x4c\xff\x06\xdf\x46\xe2\xc6\xff\x43\x93\xf0\xd5\x60\xfd\x3f\xfc\xbe\xff\xb3\x59\xf8\x70\x16\x9e\x0e\xbe\x01\xb0\x9d\x85\x77\x06\x73\x00\x2f\x65\xe0\xa3\x19\xf8\xcd\x0c\x3c\x95\x81\x5f\x08\xe6\x02\x2a\x19\xf8\xe9\x0c\xdc\x93\x81\x4c\x06\x5e\x48\xc3\xaf\xa7\xe1\x7d\x69\xa8\xa7\xa1\x9c\x86\x93\x69\x78\x39\x05\xd7\x53\xf0\x67\x29\xf8\x42\x0a\x3e\x9f\x82\x9f\x4b\xc1\xf7\x93\xf0\xf7\x49\xf8\xbb\x24\x7c\x35\x09\x7f\x91\x84\xa7\x93\xf0\x48\x12\x1e\x4c\xc2\xb7\x13\xf0\xad\x04\x3c\x95\x80\x1f\x4f\xc0\x8f\x26\xe0\xaf\x42\xdb\x25\x24\x24\x24\x24\x24\x24\x24\xde\x88\x90\xdf\x08\x96\xdf\x08\x96\xdf\x08\x96\xdf\x08\x96\xdf\x08\xbe\x1d\xdf\x08\x9e\x8d\xbe\x58\x58\x2a\x7b\x1f\x20\x0c\xa8\xdd\x9f\x3d\x4d\xd6\xb1\x2e\x34\xab\x70\x2c\xa8\xdc\x2e\x9d\xc1\xd2\x7c\x8c\xc7\xd3\x75\x8c\x53\xca\xe2\xf2\x42\x45\xd9\xd5\x14\x3d\x5b\x90\x06\xaf\xf6\x17\x23\xcd\x7b\xaf\xff\xff\x7f\x00\x00\x00\xff\xff\x87\x21\xf0\x91\x00\x80\x00\x00")

func _2018092201_initialTablesUpSqlSwpBytes() ([]byte, error) {
	return bindataRead(
		__2018092201_initialTablesUpSqlSwp,
		".2018092201_initial-tables.up.sql.swp",
	)
}

func _2018092201_initialTablesUpSqlSwp() (*asset, error) {
	bytes, err := _2018092201_initialTablesUpSqlSwpBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: ".2018092201_initial-tables.up.sql.swp", size: 32768, mode: os.FileMode(420), modTime: time.Unix(1538958710, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2018092201_initialTablesDownSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x8f\xc1\x0a\x82\x40\x10\x86\xef\x3e\xc5\x1e\x0d\x7a\x03\x4f\x5a\x5b\x08\xa1\x22\x5b\xe1\x69\x18\xd7\x89\xa4\x5c\x65\x1c\x03\xdf\x3e\x08\x0a\x54\xa8\x4e\x03\x33\xff\x7c\x7c\xff\x36\x4f\x33\xb5\x3b\x26\x1b\x13\xa7\x89\xba\xd7\xbd\x40\x55\x33\x59\x69\x79\x04\xa6\x07\x71\x4f\x7e\x54\x18\x1d\xae\xd5\x74\xc4\x89\xd1\x7b\x9d\xaf\x02\xef\x1b\xe3\xaf\x5f\x53\x64\x5a\x75\x28\x57\x40\x57\x41\x43\x82\x73\xa8\x6d\x9b\xae\x75\xe4\x04\x6a\x67\x99\x1a\x72\xe2\xff\xf0\x28\x47\x21\x9c\xc7\x17\x29\xe1\xc1\x59\x14\x02\xbc\x08\xf1\x8c\xb9\x80\x9f\x62\x7d\x7e\x89\x56\x28\x08\x1d\x93\xc8\xf8\xee\x10\x46\x07\xfd\xb9\x4d\x96\xe5\x60\x6f\x24\x7d\xe0\x3d\x03\x00\x00\xff\xff\x96\xd8\x40\x70\x6d\x01\x00\x00")

func _2018092201_initialTablesDownSqlBytes() ([]byte, error) {
	return bindataRead(
		__2018092201_initialTablesDownSql,
		"2018092201_initial-tables.down.sql",
	)
}

func _2018092201_initialTablesDownSql() (*asset, error) {
	bytes, err := _2018092201_initialTablesDownSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2018092201_initial-tables.down.sql", size: 365, mode: os.FileMode(420), modTime: time.Unix(1538962160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var __2018092201_initialTablesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x58\x6d\x6f\xdb\xba\x15\xfe\xee\x5f\x71\x3e\x14\x90\x85\x2b\x27\xe9\xb0\x02\x5b\x52\x17\x70\x1d\x3a\xd1\xea\xc8\x85\xac\x34\x08\x70\x01\x83\x92\x68\x9b\xab\x4c\x6a\x22\xd5\xc4\xc3\xfd\xf1\x03\xa9\x37\x4a\x96\x9d\xdc\xad\x28\x0a\xac\xfa\x12\x47\x3a\x7c\xce\xe1\x73\x0e\xcf\x0b\xa7\x3e\x9a\x04\x08\x82\xc9\xc7\x39\x82\x30\x8f\xbe\x12\x29\x60\x38\x00\x80\xf2\x3f\x86\x77\x04\x3e\x3e\x06\x68\xa2\x5f\xaa\xe7\xb3\xef\xde\x4d\xfc\x47\xf8\x84\x1e\x1d\xfd\x32\x26\x09\xdd\x81\xeb\x05\xb5\x88\xb7\x08\xc0\xbb\x9f\xcf\xeb\x17\xd3\x5b\x34\xfd\x04\xc3\x42\xf2\x03\x5c\xc0\xc4\xbb\x2e\xd7\xbd\x87\xbf\xbc\x7b\x67\x0f\xec\xab\xc1\x60\x34\x82\x9c\x49\x9a\x80\xdc\x12\xf8\x44\xf6\x5f\x70\x92\x93\xa5\xe4\x19\x01\xca\x24\xc9\xd6\x38\x22\x20\xf2\x34\xe5\x99\x14\x90\x62\x21\x28\xdb\x68\xe1\xc2\x58\x10\x24\xc5\x19\x96\x24\xd9\x3b\xc0\xb3\x06\x4f\x48\x9e\xfd\x13\x70\x24\x73\x9c\x24\xfb\x06\x22\xda\x62\xb6\xa9\x30\xb4\x39\x54\x92\x4c\xbd\xce\x70\xa4\x7e\xa5\x24\x2b\xb1\x1d\x90\x5b\x2a\x14\x64\x9c\xef\x76\x7b\xc8\xf8\x13\x88\x2d\xcf\x93\x18\x44\xbe\x5e\xd3\x88\xc0\x9a\x67\x40\xbe\x91\x6c\x2f\xb7\x94\x6d\xce\x06\xae\xb7\x44\x7e\xa0\x88\x59\x34\xdc\x36\xb4\x3a\x85\x46\x1b\xbe\x4c\xe6\xf7\x68\x09\x43\xcb\xba\xbc\xd4\x54\x3b\x80\x45\x44\xe9\xd0\x3a\xb7\x6c\xc5\xcb\xa0\xe5\xa6\x14\xcb\x6d\x8c\x25\x6e\xf9\xa9\xe3\xa3\x03\x07\xf8\x68\x86\x7c\xe4\x4d\xd1\xb2\xcf\x14\xbb\x70\xe4\x3a\x4f\x12\x85\xfe\x12\x58\xe9\xcd\x5a\xfc\xfd\x07\xb0\xac\x12\x63\x47\x24\xd6\xd6\xf5\x63\x38\x83\x41\x27\x86\x2a\x3b\x9c\x5a\x7d\x11\x0c\xe5\x9e\xbf\xb8\xe8\xa1\xde\xf2\x2a\xcd\x88\x94\x7b\x98\x2c\x35\xca\x12\xcd\xd1\x34\x00\xc2\x22\x1e\x93\x1a\xc6\x22\x22\xc2\x29\xb1\x6c\x98\x54\x9b\x75\x6a\x3b\x00\x2a\xf1\x4a\x5b\x67\x41\xfd\xba\x67\x49\xb5\xb7\xce\x92\xea\x75\xb9\x62\xe6\x2f\xee\x6a\x8b\x95\xf7\x46\x23\xd8\xd0\x6f\x84\x01\xd6\xaf\x01\x0b\xd8\xd1\xcd\x56\x42\xa8\x62\x26\x67\x31\x50\xa6\x23\xb0\xf6\xac\xc4\x61\x42\x1c\x90\x59\xce\x22\x2c\x09\x50\x09\x78\xad\xe2\x51\x49\x31\xf2\x2c\x8d\x60\x95\x1c\x42\xa2\x74\x14\x50\x58\x02\xcf\x4a\x69\x4b\xff\x49\xb9\xb0\x1c\xa0\x6b\xc0\x6c\x7f\x36\x18\x8d\x94\x2c\x7a\xc6\xbb\x34\x21\xe2\xb2\xfc\x5f\x3d\x95\xb6\x95\x5e\x65\x46\xa3\xf1\x34\x81\xe9\xc0\x5b\x1b\x60\xf4\x01\xa0\x96\x3c\x86\xb4\xe6\xfc\x10\xac\x17\xc9\x90\x3c\x01\x76\x7e\x80\x76\x0c\xec\xfc\x35\x68\x21\xce\xce\x43\xfc\xef\xbe\xd3\xe7\xc0\x5f\xbf\x2b\xda\x3b\x13\x4d\x49\xfe\xcf\x88\x7f\xfb\xee\x88\x7f\xef\x22\x1a\x92\xa7\x40\x0b\xd9\xef\x45\xe3\x49\xb4\x16\x8d\x26\x5c\x95\x35\x66\xf7\xde\x34\x70\x17\x5e\x17\x3a\x6c\xd2\x9b\xd3\xd4\x2d\x74\x83\x7c\x07\xaa\xc3\x52\xbd\xb1\xc1\x47\xc1\xbd\xef\x2d\x0b\x79\x75\xd2\xdf\xbc\x19\x5c\xa3\xe9\x7c\xe2\x23\x7d\xd6\x55\xe2\x2f\x3e\x5e\x35\x85\xd0\x40\xb8\x1a\x7c\x44\x37\xae\xd7\xc8\x5e\x8e\x41\xe4\xa1\x90\x19\x65\x9b\xd2\x16\x9d\x2d\x2a\xd5\x76\x07\xe7\x72\x0c\x29\x17\x54\x52\xce\x86\x82\xc8\x55\xb8\x97\x64\x68\x41\x43\xca\x45\x5d\x44\x5c\x4f\xab\x28\x11\xdc\x59\x03\xa2\xca\x6d\x70\x8b\x3c\xa3\x16\xa8\x6d\xf5\x5b\xf2\x16\x66\x0b\x1f\x86\x35\x17\xbf\x35\x38\x23\x78\x6b\x97\xf0\xc8\xbb\x06\x77\x56\xfc\x2e\xd1\x34\xc6\xd5\x00\x79\xd7\x57\x83\x37\x6f\x60\x3e\xf1\x6e\xee\x27\x37\x08\xac\x34\x49\x37\xe2\x5f\x89\x05\xee\xdd\xdd\x7d\x51\xc1\x96\x81\xef\x4e\x03\xa3\xb0\xd5\xee\x52\x1b\xc4\x2b\xca\xa2\x8c\xec\x08\x93\xc3\xb0\xa0\xb7\xdf\x15\x0d\xb9\x0f\xb7\xae\xea\x5f\x8a\x42\x54\x92\xa3\x5b\x8c\x4d\x45\x5a\xe8\x00\x8f\x24\x91\xab\x84\xb0\x8d\xdc\x0e\x43\x5b\xef\x07\xc6\xaa\xfb\x80\xf9\x62\xf1\xb9\xa6\x27\xec\xb8\xc9\x24\xa6\x0f\xa3\xa1\x44\xc1\xd4\xfc\x87\x30\x36\x8c\xe9\x73\x80\xaa\x87\x47\xf9\x14\xa7\x2d\x77\x5e\xde\xda\x6f\xda\xb6\x3f\xe9\x90\xd1\x08\x6e\xfe\xab\x5a\xf5\x44\x95\x74\x11\x2d\x44\x15\x1f\x9c\xa6\x84\xc5\x24\x56\x95\x47\x6e\xb1\xd4\x2b\x14\xfe\x16\x0b\x55\x8a\x14\xc5\x23\x92\x68\x3f\x0b\x07\x32\x22\xf3\x8c\x35\x05\x2e\xe5\x42\xd0\x30\x29\x14\x15\x00\xab\x48\xb5\x5b\x2b\x65\x4a\x69\x84\xd6\x0d\x43\xf1\x95\xa6\xa9\x6a\xe3\xf8\x37\xa2\xbb\x3e\x05\x9f\x72\x49\x98\xa4\x38\x69\x29\xb2\x4f\x55\xc0\x88\xef\x52\xce\x08\x93\x46\x04\x5a\xe7\xbd\x5d\x59\x99\x7f\x2e\xba\xa9\x4c\x3d\x43\xc6\x75\x07\x08\x11\x66\xca\xd8\x90\xc8\x27\x42\x18\x58\xe7\x16\x60\x16\xab\x55\xc0\xe5\x56\x97\x73\xcc\x94\x79\x6a\x8f\x02\x72\x16\xab\xa2\x7d\x6e\xd9\x2f\xda\xd4\x4d\xf6\x7d\xb6\x55\x42\xa6\x8d\xaf\x42\x0d\x39\xdf\x9d\x00\xee\x08\xc2\x1f\x7f\x00\xb2\x7e\xff\xfd\xf9\xe2\x42\x1b\xfe\x0a\x1a\x5a\xcb\x35\x23\xe6\x2b\x8d\xa4\x3c\xcc\x78\xb6\xc3\x49\x79\xe4\x79\x16\x13\x75\x1e\x5f\xe2\x46\x9b\x32\x43\xb3\xd9\x6c\xd6\xec\x41\x4d\x18\x85\xf1\xc5\xe7\xd9\xa9\x92\xd1\x87\x7a\xbc\x6e\xf4\xa7\x26\xa3\x3b\x9d\x4e\x96\x08\x1e\x6e\x91\x67\x9c\xd8\xa2\xef\x6c\x9f\x5a\xdd\xf9\x56\x49\x49\xab\x30\x3b\x50\xfd\xa8\x24\x62\xe0\x15\x76\xe8\x0c\x76\x20\xda\x59\x74\x90\x57\x8b\x3e\xfb\xf8\x2a\x34\x5f\x22\x23\x07\x9d\x34\xb8\x62\x44\x25\x9c\x7e\x48\xe4\x5d\x1f\x7c\xd0\x1a\x0a\x5e\x8d\x08\xaa\xfc\xd2\x5e\xdc\xc9\x60\x2f\x95\x93\xe0\xf1\x73\x31\x26\xad\x30\x8b\x57\xaa\x3d\x57\x6e\x19\xf6\xcc\x38\xbd\x33\x8b\x31\x7d\xd4\x41\x91\x50\x21\x57\x31\xcd\x48\x24\x79\xb6\x1f\x9a\x43\x97\x03\x31\xcd\xcc\xf8\x10\x12\x67\x72\x85\xcb\xcf\x30\x2e\x06\x1f\xd0\x0d\xfb\x4a\xf2\x2a\x72\xca\x0f\xf6\xa0\x0a\xa0\x25\x0a\x16\xb3\x43\xbb\xcb\x70\x7a\x70\x83\x5b\xf0\xd1\xf4\xde\x5f\xba\x5f\x50\x4d\x10\x65\x69\x2e\x45\xb3\xbf\xea\x39\x88\xbe\xca\xc8\x6e\x55\xd2\x46\x14\xde\xa8\x44\x54\x39\x9a\x2c\x21\xc3\x6c\x43\x56\x09\x7f\x72\xfa\xbc\xfa\xa7\x90\xbb\xf1\x57\x2e\xb1\xdb\xaa\xb6\x74\xb3\xed\xd5\xd5\x0a\xbc\x7a\xed\x6f\xf0\x56\xad\x6d\xce\xab\x26\xbe\x17\x20\x3c\x2b\x42\x74\xb2\x2c\x62\xf5\x88\x90\x71\xe7\x51\xcf\x8e\x1d\x49\xdd\x0c\x54\x23\x74\xd8\xfe\xf8\x70\x8b\x7c\x64\x5e\x9c\x8c\xbb\x18\x76\xa3\x38\xa6\x42\x52\x16\x49\x35\xd3\xae\xe9\x33\x0c\xab\x56\x35\x2e\x76\x77\xcc\xa3\xc3\xf2\x6f\xa7\xb3\x4d\xe3\xb3\x66\xa2\xa5\xc5\x76\xd5\x8f\x0e\x3b\xc7\xce\x7c\x6b\x68\x85\x34\xee\x17\x2b\x36\x38\xa4\x67\x75\x68\x80\xbb\x2c\xdc\xbc\xf0\xc1\x30\x01\x3e\x80\x21\x74\x34\xd1\xa8\x16\xad\x46\x53\xde\x3f\x06\xf7\x1e\x4c\xa9\xd3\x78\xf5\xf1\x53\xf1\x78\x60\xd7\xb8\x3e\x9e\x27\x51\xd2\xb8\x0c\x06\x18\x03\x3d\xeb\x8d\x84\xf2\x59\xf8\xd7\xc8\x87\x8f\x8f\xa6\x9a\x7e\xc9\xb9\x7b\xe7\x06\x87\x39\x52\x53\x5f\x1e\x63\xda\xfa\x76\xef\xa9\xd4\x33\x31\x6e\x5e\xe0\x67\x8a\x83\x0e\xaf\x7d\x75\x33\x5d\x3f\x9f\xb5\xe2\xba\xb6\xe9\x87\xc6\xc4\x8f\xf6\x66\xf7\x6c\xa7\xeb\x67\xa7\xdf\xc5\x15\x95\x5d\x9e\xf4\xa6\xbb\xf7\x6e\xb6\xd9\x57\x1c\x2e\x39\x76\x7b\x95\xc6\x67\x7d\x57\x54\x3d\x46\xc2\x1c\xcd\x02\x58\xdc\x07\xc8\x87\x7f\x2c\x5c\xcf\x8c\x04\x58\x78\x3d\x3a\xc7\x87\x44\xbd\x76\x47\xed\xe8\x1e\x8d\xf4\x05\x2b\x70\x46\xf4\x65\x15\x95\x40\x9e\xa9\x50\xa3\x41\x84\x99\xa5\x07\x90\x14\x67\x12\xf8\xfa\x30\x75\xf2\x4c\xc9\x3f\xe9\xdb\xd8\x08\xe7\x82\x40\x2e\x40\x72\x50\x83\x81\x1e\x0a\x00\x27\x49\xa5\x46\xe4\x61\xc4\x99\x1a\x0e\x84\x02\xd3\xc3\x4c\x81\xf3\x44\xac\x8c\x40\xc2\xf9\x57\xd5\xb6\xae\x79\x66\x3b\x20\x38\x3c\xa9\x41\x23\xfa\xaa\x54\x70\x06\x5b\x92\x91\x96\x1f\xcc\x03\x67\x50\x7d\x70\x94\x9a\x08\xe8\x39\x3f\x63\x33\x5f\x0e\xda\xa1\xd8\xa6\xb7\x88\xbb\xaa\x99\xe8\xeb\x8c\x96\xba\x2d\x7a\xb1\x89\x59\x65\xe4\x1b\xc9\x04\xf9\xd5\xcc\xfc\x6a\x66\x7e\x35\x33\x27\x9b\x99\xf1\x4f\xda\xcd\xbc\xff\x21\xdd\x0c\x5c\xa3\xe5\xf4\xff\xa3\xa5\xf9\xce\xd1\xd0\x76\xfa\x41\x49\xfc\xe9\x5c\xf6\xab\x6f\x79\xcd\x8e\x0e\x0a\xb3\xc1\xf6\xeb\xab\xf3\x7f\x02\x00\x00\xff\xff\xa9\xf1\x2d\xb9\x7b\x1f\x00\x00")

func _2018092201_initialTablesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__2018092201_initialTablesUpSql,
		"2018092201_initial-tables.up.sql",
	)
}

func _2018092201_initialTablesUpSql() (*asset, error) {
	bytes, err := _2018092201_initialTablesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "2018092201_initial-tables.up.sql", size: 8059, mode: os.FileMode(420), modTime: time.Unix(1538962160, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	".2018092201_initial-tables.up.sql.swp": _2018092201_initialTablesUpSqlSwp,
	"2018092201_initial-tables.down.sql": _2018092201_initialTablesDownSql,
	"2018092201_initial-tables.up.sql": _2018092201_initialTablesUpSql,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	".2018092201_initial-tables.up.sql.swp": &bintree{_2018092201_initialTablesUpSqlSwp, map[string]*bintree{}},
	"2018092201_initial-tables.down.sql": &bintree{_2018092201_initialTablesDownSql, map[string]*bintree{}},
	"2018092201_initial-tables.up.sql": &bintree{_2018092201_initialTablesUpSql, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

